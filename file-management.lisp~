(defun get-subfolders (path &optional (inclusive nil))
  (let ((result (if inclusive (list (pathname path) nil)))
	(dirs (remove-if-not #'cl-fad:directory-pathname-p
			     (cl-fad:list-directory path))))
    (loop for dir in dirs
	do (push dir result))
    (loop for dir in dirs
	  do (setf result (append (get-subfolders dir) result)))
    (nreverse result)))

(defun is-git-folder-p (path-to-be-searched)
 (let ((path-string (namestring path-to-be-searched))
       (path (pathname path-to-be-searched)))
   (if (and (cl-fad:directory-pathname-p path)
	    (search "/.git/" path-string))
      T
      NIL)))

(defun get-subfolders-without-git (path)
  (remove-if #'is-git-folder-p (get-subfolders path)))


